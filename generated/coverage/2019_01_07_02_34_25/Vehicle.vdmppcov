class Vehicle
instance variables
  vehicleInfo:[VehicleInfo] := nil;
  isReserved:[Reservation] := nil;
  DailyPrice:real := 0;
  Description:seq of (char) := [];
  Rating:real := 0;
  NumberTrips:nat := 0;
  Plate:seq of (char) := [];
  Odometer:nat := 0;

	inv DailyPrice >= 0 and Rating >= 0 and Rating <= 5 and NumberTrips >= 0 and Odometer >= 0;
	
operations

	/*
	* Constructor of the Vehicle class
	* Pre:
	* - The parameters must be valid inputs
	* and the plate is exactly 8 character long (Portuguese)
	* Post:
	* - The object must have the passed parameters and have no Reservation at start
	*/	
	public Vehicle : VehicleInfo * real * seq of (char) * seq of (char) * int ==> Vehicle
	Vehicle(info, price, description, plate, odometer) ==
		(
			vehicleInfo := info;
			DailyPrice := price;
			Description := description;
			Plate := plate;
			Odometer := odometer;
			return self
		)
		pre info <> undefined and price > 0 and len description > 0 and len plate = 8 and odometer > 0
		post vehicleInfo <> nil and isReserved = nil and DailyPrice = price 
				and Description = description and Rating = 0 and NumberTrips = 0 and len Plate = 8 and Odometer = odometer;

	/*
	* Get the Vehicle plate
	* Post:
	* - The return value must be the same of the object
	*/
	public pure getPlate : () ==> seq of (char)
		getPlate() ==
			return Plate
			post RESULT = Plate;
			
	/*
	* Get the Vehicle number of trips
	* Post:
	* - The return value must be the same of the object
	*/
	public pure getNumberTrips : () ==> nat
		getNumberTrips() ==
			return NumberTrips
			post RESULT = NumberTrips;
			
	/*
	* Get the Vehicle daily price
	* Post:
	* - The return value must be the same of the object
	*/
	public pure getPrice : () ==> real
		getPrice() ==
			return DailyPrice
			post RESULT = DailyPrice;
	
	/*
	* Get the Vehicle rating
	* Post:
	* - The return value must be the same of the object
	*/	
	public pure getRating : () ==> real
		getRating() ==
			return Rating
			post RESULT = Rating;
	
	/*
	* Get the Vehicle reservation
	* Post:
	* - The return value must be the same of the object
	*/	
	public pure getReservation : () ==> [Reservation]
		getReservation() ==
			return isReserved
			post RESULT = isReserved;
			
	/*
	* Increment number trips
	*/	
	public incrementTrips : () ==> ()
		incrementTrips() ==
			NumberTrips := NumberTrips + 1;
			
	/*
	* Add the Vehicle reservation
	* Pre:
	* - The vehicle must have no prior reservation
	* Post:
	* - The parameter value must be the same of the object
	*/		
	public addReservation : [Reservation] ==> ()
		addReservation(reservation) ==
			(
				isReserved := reservation;
			)
			pre isReserved = nil
			post reservation = isReserved;
			
	/*
	* Add Vehicle rating
	* Post:
	* - The parameter value must be the same of the object
	*/		
	public addRating : nat1 ==> ()
		addRating(rating) ==
			(
				Rating := ((Rating * NumberTrips) + rating) / (NumberTrips + 1);
			)
			pre rating >= 0 and rating <= 5
			post Rating >= 0 and Rating <= 5;
			
	/*
	* remove the Vehicle reservation
	* Pre:
	* - The vehicle must have a previously set reservation
	* Post:
	* - The reservation value must be nil
	*/		
	public removeReservation : () ==> ()
		removeReservation() ==
			(
				isReserved := nil;
			)
			pre isReserved <> nil
			post isReserved = nil;
			
	/*
	* deliver the Vehicle
	* Pre:
	* - The vehicle must have a previously set reservation
	* Post:
	* - The reservation value must be nil
	*/		
	public deliver : () ==> ()
		deliver() ==
			(
				dcl owner : CarOwner := Turo`getUser(self);
				owner.incrementTrips();
				owner.calculateRating();
				NumberTrips := NumberTrips + 1;
				isReserved := nil;
			)
			pre isReserved <> nil
			post isReserved = nil;
			
end Vehicle
